// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Enhances the clarity of client logos using AI, ensuring they are sharp and professional on the website.
 *
 * - enhanceLogoClarity - A function that enhances the logo clarity.
 * - EnhanceLogoClarityInput - The input type for the enhanceLogoClarity function.
 * - EnhanceLogoClarityOutput - The return type for the enhanceLogoClarity function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EnhanceLogoClarityInputSchema = z.object({
  logoDataUri: z
    .string()
    .describe(
      "A client logo as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type EnhanceLogoClarityInput = z.infer<typeof EnhanceLogoClarityInputSchema>;

const EnhanceLogoClarityOutputSchema = z.object({
  enhancedLogoDataUri: z
    .string()
    .describe('The enhanced client logo as a data URI.'),
});
export type EnhanceLogoClarityOutput = z.infer<typeof EnhanceLogoClarityOutputSchema>;

export async function enhanceLogoClarity(input: EnhanceLogoClarityInput): Promise<EnhanceLogoClarityOutput> {
  return enhanceLogoClarityFlow(input);
}

const enhanceLogoClarityPrompt = ai.definePrompt({
  name: 'enhanceLogoClarityPrompt',
  input: {schema: EnhanceLogoClarityInputSchema},
  output: {schema: EnhanceLogoClarityOutputSchema},
  prompt: [
    {
      media: {url: '{{{logoDataUri}}}'},
    },
    {
      text: 'Enhance the clarity and sharpness of this logo. Ensure it is high resolution and suitable for display on a website, even when rotated.',
    },
  ],
  model: 'googleai/gemini-2.0-flash-preview-image-generation',
  config: {
    responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
  },
});

const enhanceLogoClarityFlow = ai.defineFlow(
  {
    name: 'enhanceLogoClarityFlow',
    inputSchema: EnhanceLogoClarityInputSchema,
    outputSchema: EnhanceLogoClarityOutputSchema,
  },
  async input => {
    const {media} = await enhanceLogoClarityPrompt(input);
    return {enhancedLogoDataUri: media!.url!};
  }
);
